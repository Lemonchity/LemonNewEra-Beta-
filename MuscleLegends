local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "LemonHub|muscle legends",
    Icon = "door-open", -- lucide icon
    Author = "by LemonHubOffical",
    Folder = "LemonHubOffical",
    
    -- ↓ This all is Optional. You can remove it.
    Size = UDim2.fromOffset(580, 460),
    MinSize = Vector2.new(560, 350),
    MaxSize = Vector2.new(850, 560),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    
    -- ↓ Optional. You can remove it.
    --[[ You can set 'rbxassetid://' or video to Background.
        'rbxassetid://':
            Background = "rbxassetid://", -- rbxassetid
        Video:
            Background = "video:YOUR-RAW-LINK-TO-VIDEO.webm", -- video 
    --]]
    
    -- ↓ Optional. You can remove it.
    User = {
        Enabled = true,
        Anonymous = false,
        Callback = function()
            print("clicked")
        end,
    },
    
    --       remove this all, 
    -- !  ↓  if you DON'T need the key system
    KeySystem = { 
        -- ↓ Optional. You can remove it.
        Key = { "LemonHub-527382", "LemonDevv916" },
        
        Note = "Key System just get it hasnt got links There's a key instead.",
        
      -- ↓ Optional. You can remove it.
        Thumbnail = {
            Image = "rbxassetid://",
            Title = "Thumbnail",
        },
        
        -- ↓ Optional. You can remove it.
        URL = "LemonHub-527382",
        
        -- ↓ Optional. You can remove it.
        SaveKey = true, -- automatically save and load the key.
        
        -- ↓ Optional. You can remove it.
        -- API = {} ← Services. Read about it below ↓
    },
})

Window:EditOpenButton({
    Title = "Open LemonHub",
    Icon = "monitor",
    CornerRadius = UDim.new(0,16),
    StrokeThickness = 2,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = true,
    Enabled = true,
    Draggable = true,
})

-- */  Abo ut Tab  /* --
do
    local AboutTab = Window:Tab({
        Title = "About LemonHub",
        Icon = "info",
    })
    
    local AboutSection = AboutTab:Section({
        Title = "About LemonHub",
    })
    
    AboutSection:Image({
        Image = "https://avatars.mds.yandex.net/i?id=e9e8e1ccd2c456f3b55449b8f68ec1cf_l-4591219-images-thumbs&n=13",
        AspectRatio = "16:9",
        Radius = 9,
    })
    
    AboutSection:Space({ Columns = 3 })
    
    AboutSection:Section({
        Title = "What is LemonHub?",
        TextSize = 24,
        FontWeight = Enum.FontWeight.SemiBold,
    })

    AboutSection:Space()
    
    AboutSection:Section({
        Title = [[ LemonHub is new scripts for games and that script for muscle legends i just newbrine at scripts also you can try my scripts at unnamed shooter,Murderers vs sherrifs, universal lemonhub. Enjoy.]],
        TextSize = 18,
        TextTransparency = .35,
        FontWeight = Enum.FontWeight.Medium,
    })
    
    AboutTab:Space({ Columns = 4 }) 
    
    
    -- Default buttons
    
    AboutTab:Button({
        Title = "LemonHub",
        Color = Color3.fromHex("#a2ff30"),
        Justify = "Center",
        IconAlign = "Left",
        Icon = "", -- removing icon
        Callback = function()
            tableToClipboard(WindUI)
            WindUI:Notify({
                Title = "LemonHub",
                Content = "Copied to Clipboard!"
            })
        end
    })
    AboutTab:Space({ Columns = 1 }) 
    
    
    AboutTab:Button({
        Title = "Destroy LemomHub",
        Color = Color3.fromHex("#ff4830"),
        Justify = "Center",
        Icon = "shredder",
        IconAlign = "Left",
        Callback = function()
            Window:Destroy()
        end
    })
end

local Tab = Window:Tab({
    Title = "auto farm",
    Icon = "bird", -- optional
    Locked = false,
})


local autoFarming = false  -- переменная для контроля состояния

local Toggle = Tab:Toggle({
    Title = "Strength farm",
    Desc = "auto farm strength",
    Icon = "bird",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        autoFarming = state

        if state then
            spawn(function()
                while autoFarming do
                    local args = {"rep"}
                    game:GetService("Players").LocalPlayer:WaitForChild("muscleEvent"):FireServer(unpack(args))
                    print("auto farming " .. tostring(state))
                    wait(1)
                end
                print("auto farming stopped")
            end)
        end
    end
})


local autoFarming = false

local Toggle = Tab:Toggle({
    Title = "Push up farm",
    Desc = "auto farm Push up",
    Icon = "bird",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        autoFarming = state

        if state then
            spawn(function()
                while autoFarming do
                    local player = game:GetService("Players").LocalPlayer
                    local backpack = player:WaitForChild("Backpack")
                    local character = player.Character or player.CharacterAdded:Wait()

                    -- Имя предмета, который нужно взять
                    local itemName = "Pushups"

                    -- Проверяем наличие предмета в рюкзаке и переносим его в Character
                    local item = backpack:FindFirstChild(itemName)
                    if item then
                        item.Parent = character
                        print(itemName .. " взят из инвентаря")
                    else
                        print(itemName .. " не найден в инвентаре")
                    end

                    -- Отправляем событие с нужным аргументом
                    local args = {"rep"}
                    player:WaitForChild("muscleEvent"):FireServer(unpack(args))

                    print("auto farming " .. tostring(state))
                    wait(1)
                end
                print("auto farming stopped")
            end)
        end
    end
})

local autoFarming = false

local Toggle = Tab:Toggle({
    Title = "Weight farm",
    Desc = "auto farm Weight",
    Icon = "bird",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        autoFarming = state

        if state then
            spawn(function()
                while autoFarming do
                    local player = game:GetService("Players").LocalPlayer
                    local backpack = player:WaitForChild("Backpack")
                    local character = player.Character or player.CharacterAdded:Wait()

                    -- Имя предмета, который нужно взять
                    local itemName = "Weight"

                    -- Проверяем наличие предмета в рюкзаке и переносим его в Character
                    local item = backpack:FindFirstChild(itemName)
                    if item then
                        item.Parent = character
                        print(itemName .. " взят из инвентаря")
                    else
                        print(itemName .. " не найден в инвентаре")
                    end

                    -- Отправляем событие с нужным аргументом
                    local args = {"rep"}
                    player:WaitForChild("muscleEvent"):FireServer(unpack(args))

                    print("auto farming " .. tostring(state))
                    wait(1)
                end
                print("auto farming stopped")
            end)
        end
    end
})

local Toggle = Tab:Toggle({
    Title = "Handstand farm",
    Desc = "auto farm Handstand",
    Icon = "bird",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        autoFarming = state

        if state then
            spawn(function()
                while autoFarming do
                    local player = game:GetService("Players").LocalPlayer
                    local backpack = player:WaitForChild("Backpack")
                    local character = player.Character or player.CharacterAdded:Wait()

                    -- Имя предмета, который нужно взять
                    local itemName = "Handstands"

                    -- Проверяем наличие предмета в рюкзаке и переносим его в Character
                    local item = backpack:FindFirstChild(itemName)
                    if item then
                        item.Parent = character
                        print(itemName .. " взят из инвентаря")
                    else
                        print(itemName .. " не найден в инвентаре")
                    end

                    -- Отправляем событие с нужным аргументом
                    local args = {"rep"}
                    player:WaitForChild("muscleEvent"):FireServer(unpack(args))

                    print("auto farming " .. tostring(state))
                    wait(1)
                end
                print("auto farming stopped")
            end)
        end
    end
})

local Toggle = Tab:Toggle({
    Title = "SitUp farm",
    Desc = "auto farm SitUps",
    Icon = "bird",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        autoFarming = state

        if state then
            spawn(function()
                while autoFarming do
                    local player = game:GetService("Players").LocalPlayer
                    local backpack = player:WaitForChild("Backpack")
                    local character = player.Character or player.CharacterAdded:Wait()

                    -- Имя предмета, который нужно взять
                    local itemName = "Situps"

                    -- Проверяем наличие предмета в рюкзаке и переносим его в Character
                    local item = backpack:FindFirstChild(itemName)
                    if item then
                        item.Parent = character
                        print(itemName .. " взят из инвентаря")
                    else
                        print(itemName .. " не найден в инвентаре")
                    end

                    -- Отправляем событие с нужным аргументом
                    local args = {"rep"}
                    player:WaitForChild("muscleEvent"):FireServer(unpack(args))

                    print("auto farming " .. tostring(state))
                    wait(1)
                end
                print("auto farming stopped")
            end)
        end
    end
})

local Tab = Window:Tab({
    Title = "Killer",
    Icon = "bird", -- optional
    Locked = false,
})

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local runService = game:GetService("RunService")

local bringing = false
local connection

local function bringPlayers()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local myHRP = player.Character.HumanoidRootPart

        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                -- Перемещаем всех игроков рядом с вами с небольшим сдвигом
                plr.Character.HumanoidRootPart.CFrame = myHRP.CFrame + Vector3.new(2, 0, 0)
            end
        end
    end
end

local Toggle = Tab:Toggle({
    Title = "Kill all (bring method)",
    Desc = "auto farm kills (equip punch)",
    Icon = "bird",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("auto farming " .. tostring(state))

        if state then
            bringing = true
            -- Запускаем цикл на каждом кадре
            connection = runService.Heartbeat:Connect(function()
                if bringing then
                    bringPlayers()
                end
            end)
        else
            -- Отключаем цикл, когда toggle выключен
            bringing = false
            if connection then
                connection:Disconnect()
                connection = nil
            end
        end
    end
})

